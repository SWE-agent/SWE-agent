name: 'SWE-Agent Issue Resolver'
description: 'Automatically resolves GitHub issues using SWE-Agent with AI assistance'
author: 'nimishchaudhari'

inputs:
  github_token:
    description: 'GitHub token for repository access and comment posting'
    required: true
    default: ${{ github.token }}
  trigger_phrase:
    description: 'Comment phrase that triggers the agent (e.g., "@swe-agent fix this")'
    required: false
    default: '@swe-agent'
  llm_api_key:
    description: 'API key for the LLM (OpenAI, Anthropic, etc.). Store as repository secret.'
    required: true
  model_name:
    description: 'AI model to use (e.g., gpt-4o, claude-3.5-sonnet, gpt-4-turbo)'
    required: false
    default: 'gpt-4o'
  timeout_minutes:
    description: 'Maximum time in minutes to run SWE-agent (default: 30)'
    required: false
    default: '30'
  use_prebuilt_image:
    description: 'Whether to use the pre-built Docker image (faster) or build from Dockerfile'
    required: false
    default: 'true'

outputs:
  patch_generated:
    description: 'Whether a patch was generated'
  patch_content:
    description: 'The generated patch content'
  execution_time:
    description: 'Time taken for execution'

runs:
  using: 'composite'
  steps:
    - name: Run with pre-built image
      if: inputs.use_prebuilt_image == 'true'
      uses: docker://ghcr.io/nimishchaudhari/swe-agent-resolver:latest
      env:
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_TRIGGER_PHRASE: ${{ inputs.trigger_phrase }}
        INPUT_LLM_API_KEY: ${{ inputs.llm_api_key }}
        INPUT_MODEL_NAME: ${{ inputs.model_name }}
        INPUT_TIMEOUT_MINUTES: ${{ inputs.timeout_minutes }}

    - name: Run with Dockerfile build
      if: inputs.use_prebuilt_image != 'true'
      uses: docker://dockerfile
      with:
        args: ${{ github.action_path }}
      env:
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_TRIGGER_PHRASE: ${{ inputs.trigger_phrase }}
        INPUT_LLM_API_KEY: ${{ inputs.llm_api_key }}
        INPUT_MODEL_NAME: ${{ inputs.model_name }}
        INPUT_TIMEOUT_MINUTES: ${{ inputs.timeout_minutes }}

branding:
  icon: 'cpu'
  color: 'blue'

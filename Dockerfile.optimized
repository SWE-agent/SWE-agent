# Optimized Dockerfile for faster builds
FROM ubuntu:24.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies in a single layer with minimal packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3=3.12* \
    python3-dev \
    python3-pip \
    python3-venv \
    git \
    jq \
    build-essential \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create virtual environment for better dependency isolation
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip in virtual environment
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Pre-install common dependencies to leverage Docker layer caching
# These rarely change, so they'll be cached for future builds
RUN pip install --no-cache-dir \
    requests \
    pyyaml \
    click \
    rich \
    jinja2 \
    gitpython \
    anthropic \
    openai \
    litellm

# Clone SWE-agent repository (this layer will be cached unless the repo changes)
RUN git clone --depth 1 --single-branch https://github.com/SWE-agent/SWE-agent.git /app/swe-agent

# Set working directory for SWE-agent installation
WORKDIR /app/swe-agent

# Install SWE-agent dependencies (leveraging pre-installed packages)
RUN if [ -f "requirements.txt" ]; then \
        pip install --no-cache-dir -r requirements.txt; \
    fi

# Install SWE-agent in editable mode
RUN pip install --no-cache-dir --editable .

# Set main working directory
WORKDIR /app

# Copy application files (these change frequently, so put them last)
COPY entrypoint.sh /entrypoint.sh
COPY src/ /src/

# Set permissions in a single layer
RUN chmod +x /entrypoint.sh /src/*.sh

# Display versions for verification (moved to end to avoid rebuilding)
RUN echo "=== System Information ===" \
    && echo "Git version: $(git --version)" \
    && echo "Python version: $(python3 --version)" \
    && echo "SWE-agent version: $(python3 -c 'import sweagent; print(getattr(sweagent, "__version__", "unknown"))' 2>/dev/null || echo 'installed')" \
    && echo "Ubuntu version: $(cat /etc/os-release | grep PRETTY_NAME)" \
    && echo "âœ… Container environment setup complete"

# Health check to ensure the environment is working
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import sys; print('Python OK')" && which git > /dev/null

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
